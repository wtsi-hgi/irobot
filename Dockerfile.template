# The Great Dimorphic Dockerfile!

# Common lines should be prefixed with a "*", followed by a single
# character; native authentication lines with an "N" and Kerberos
# authentication lines get a "K". Everything else is ignored.

# Common variables: user uid group gid irods_env
# iRODS native authentication variables: password
# Kerberos authentication variables: krb_realm keytab

* FROM ubuntu:trusty
* MAINTAINER Christopher Harrison <ch12@sanger.ac.uk>

# Install Ubuntu system packages
* RUN apt-get update \
*  && apt-get -y install python \
*                        wget \
N                        libfuse2
K                        libfuse2 \
K                        krb5-user \
K                        libgssapi-krb5-2

# Download and install iRODS client and Kerberos plugin, if needed
* RUN wget ftp://ftp.renci.org/pub/irods/releases/4.1.10/ubuntu14/irods-icommands-4.1.10-ubuntu14-x86_64.deb \
K          ftp://ftp.renci.org/pub/irods/plugins/irods_auth_plugin_krb/1.4/irods-auth-plugin-krb-1.4-ubuntu14-x86_64.deb \
*  && dpkg -i irods-icommands-4.1.10-ubuntu14-x86_64.deb \
K             irods-auth-plugin-krb-1.4-ubuntu14-x86_64.deb \
*  && apt-get -fy install \
*  && rm *.deb

# Create sudo user and group, with iRODS environment
# Kerberos: Plus keytab and crontab to renew credentials every 8hrs
* RUN groupadd -fg ${gid} ${group} \
*  && useradd -mg ${gid} -u ${uid} ${user} \
N  && echo "${user} ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers.d/${user}
K  && echo "${user} ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers.d/${user} \
K  && echo "0 */8 * * * ${user} kinit -R ${user}@${krb_realm} -kt /home/${user}/${keytab}" > /etc/cron.d/renew-kerberos
K ADD ${keytab} /home/${user}/${keytab}
* ADD ${irods_env} /home/${user}/.irods/irods_environment.json
* RUN chown -R ${user}:${group} /home/${user}

# Set working directory and user and initialise authentication
# NOTE Kerberos credentials initially have a 7 day renewal; the
#      container must be started before this renewal expiry date
* WORKDIR /home/${user}
* USER ${user}
N RUN echo "${password}" | iinit || true
K RUN kinit -r7d ${user}@${krb_realm} -kt /home/${user}/${keytab}

# TODO Start service
# CMD sudo cron \
#  && ./my-binary-here
