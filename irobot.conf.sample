[precache]

# The directory that stores the contents of the precache. If using the
# containerised application, this should be set to the location of the
# bind mounted volume within the container.
location = /precache

# The precache tracking database filename. If a single filename
# component is given, then it is assumed to reside within the precache
# location; otherwise it will be stored at the specified location. (This
# probably won't need to be changed.)
index = .precache.db

# Maximum size of the precache: it can be set to "unlimited" to grow
# indefinitely (until the disk fills) or a defined limit. Upon reaching
# the limit, oldest files (in terms of access time) are removed. The
# limit should be the number of bytes, optionally suffixed with "B";
# decimal (base 1000: k, M, G, T) or binary (base 1024: ki, Mi, Gi, Ti)
# multiplier prefixes may also be used with the "B" suffix.
size = unlimited

# Maximum age (in terms of access time) of files in the precache: it can
# be set to "unlimited", so that files never expire, or a defined limit.
# Upon reaching the limit, files are removed. The limit should be
# suffixed with any of the following units: h(our(s)), d(ay(s)),
# w(eek(s)) or y(ear(s)).
expiry = unlimited

# Size of file blocks for MD5 checksumming: it should be the number of
# bytes, optionally suffixed with "B"; decimal (base 1000: k, M, G, T)
# or binary (base 1024: ki, Mi, Gi, Ti) multiplier prefixes may also be
# used with the "B" suffix.
chunk_size = 64MB

[irods]

# Maximum number of concurrent connections to iRODS.
max_connections = 30

[httpd]

# IPv4 address to which the HTTP API server should bind.
bind_address = 0.0.0.0

# Port to which the HTTP API server should listen. If using the
# containerised application, this should be mapped to a host port.
listen = 5000

[log]

# The destination of all log messages; it should be set to either
# "STDERR" to stream to standard error, otherwise it will be considered
# as a filename for appendage
output = STDERR

# Minimum logging level output, to decreasing granularity: debug, info,
# warning, error or critical
level = warning
